---
#########################
# Create functions worker security (authN and TLS encryption) related folders on Pulsar functions worker hosts
# ------------------------
- name: If broker or functions worker authN is enabled, create JWT token related security folders on Pulsar functions worker hosts
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    mode: "{{ file_permission_mode }}"
  with_items:
    - "{{ tgt_pulsar_sec_dir }}/jwt/key"
    - "{{ tgt_pulsar_sec_dir }}/jwt/token"
  when: |
    (enable_brkr_authNZ is defined and enable_brkr_authNZ|bool) or
    (enable_fwrkr_authNZ is defined and enable_fwrkr_authNZ|bool)

- name: If broker or functions worker TLS is enabled, create TLS certificate related security folders on Pulsar functions worker hosts
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    mode: "{{ file_permission_mode }}"
  with_items:
    - "{{ tgt_pulsar_sec_dir }}/tls/server"
    - "{{ tgt_pulsar_sec_dir }}/tls/rootca"
  when: |
    (enable_brkr_authNZ is defined and enable_brkr_authNZ|bool) or
    (enable_fwrkr_authNZ is defined and enable_fwrkr_authNZ|bool)


#########################
# Copy locally generated security files to Pulsar functions worker hosts for connecting to brokers (as a client)
# ------------------------
- name: If broker authN is enabled, copy JWT token files to Pulsar functions worker hosts, as a broker client
  copy:
    src: "{{ item.src_file }}/"
    dest: "{{ item.dest_file }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    force: "{{ force_tgt_jwt_token }}"
  with_items:
    - { src_file: "{{ local_jwt_src_homedir }}/token/{{ cluster_name }}/brokers/{{ brkr_super_user_roles[0] }}.jwt", 
        dest_file: "{{ tgt_jwt_dest_homedir }}/token/{{ brkr_super_user_roles[0] }}.jwt" }
  when: enable_brkr_authNZ|bool

- name: If broker TLS is enabled, copy the trusted TLS certificate files to Pulsar functions worker hosts, as a broker client
  copy:
    src: "{{ item.src_file }}/"
    dest: "{{ item.dest_file }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    force: "{{ force_tgt_tls_certs }}"
  with_items:
    - { src_file: "{{ local_tls_src_homedir }}/certs/broker_{{ public_cacert_name }}", 
        dest_file: "{{ tgt_tls_dest_homedir }}/rootca/broker_{{ public_cacert_name }}" }
  when: enable_brkr_tls|bool


#########################
# Copy locally generated security files to Pulsar functions worker hosts for connecting to functions workers
# ------------------------
- name: If functions worker authN is enabled, copy JWT token related security files to Pulsar functions worker hosts
  copy:
    src: "{{ item.src_file }}/"
    dest: "{{ item.dest_file }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    force: "{{ force_tgt_jwt_token }}"
  with_items:
    - { src_file: "{{ local_jwt_src_homedir }}/key/{{ srv_component }}_jwt_private.key", 
        dest_file: "{{ tgt_jwt_dest_homedir }}/key/{{ srv_component }}_jwt_private.key" }
    - { src_file: "{{ local_jwt_src_homedir }}/key/{{ srv_component }}_jwt_public.key", 
        dest_file: "{{ tgt_jwt_dest_homedir }}/key/{{ srv_component }}_jwt_public.key" }
    - { src_file: "{{ local_jwt_src_homedir }}/token/{{ cluster_name }}/{{ srv_component }}s/{{ fwrkr_super_user_roles[0] }}.jwt", 
        dest_file: "{{ tgt_jwt_dest_homedir }}/token/{{ fwrkr_super_user_roles[0] }}.jwt" }
  when: enable_fwrkr_authNZ is defined and enable_fwrkr_authNZ|bool

- name: If functions worker TLS is enabled, copy TLS certificate related security files from localhost to Pulsar functions worker hosts
  copy:
    src: "{{ item.src_file }}/"
    dest: "{{ item.dest_file }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    force: "{{ force_tgt_tls_certs }}"
  with_items:
    - { src_file: "{{ local_tls_src_homedir }}/certs/{{ cluster_name }}/{{ srv_component }}s/{{ srv_key_name }}", 
        dest_file: "{{ tgt_tls_dest_homedir }}/server/{{ srv_key_name }}" }
    - { src_file: "{{ local_tls_src_homedir }}/certs/{{ cluster_name }}/{{ srv_component }}s/{{ srv_cert_name }}", 
        dest_file: "{{ tgt_tls_dest_homedir }}/server/{{ srv_cert_name }}" }
    - { src_file: "{{ local_tls_src_homedir }}/certs/{{ srv_component }}_{{ public_cacert_name }}", 
        dest_file: "{{ tgt_tls_dest_homedir }}/rootca/{{ srv_component }}_{{ public_cacert_name }}" }
  when: enable_fwrkr_tls is defined and enable_fwrkr_tls|bool


#########################
# Configure security related settings in functions_worker.yml
# ------------------------
- name: If functions worker's own authN/authR is enabled, configure authN/authR related settings in the functions worker config file
  lineinfile:
    path: "{{ functions_worker_conf_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^authenticationEnabled:", line: "authenticationEnabled: true" }
    - { regexp: "^authenticationProviders:", line: "authenticationProviders: ['org.apache.pulsar.broker.authentication.AuthenticationProviderToken']" }
    - { regexp: "^authorizationEnabled:", line: "authorizationEnabled: true" }
    - { regexp: "^superUserRoles:", line: "superUserRoles: [{{ fwrkr_super_user_roles_list_str }}]" }
    - { regexp: "^tokenPublicKey:", line: "tokenPublicKey: file://{{ tgt_jwt_dest_homedir }}key/{{ srv_component }}_jwt_public.key" }
  when: enable_fwrkr_authNZ is defined and enable_fwrkr_authNZ|bool

- name: If functions worker's own TLS is enabled, configure TLS related settings in the functions worker config file
  lineinfile:
    path: "{{ functions_worker_conf_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^tlsEnabled:", line: "tlsEnabled: true" }
    - { regexp: "^tlsKeyFilePath:", line: "tlsKeyFilePath: {{ tgt_tls_dest_homedir }}/server/{{ srv_key_name }}" }
    - { regexp: "^tlsCertificateFilePath:", line: "tlsCertificateFilePath: {{ tgt_tls_dest_homedir }}/server/{{ srv_cert_name }}" }
    - { regexp: "^tlsTrustCertsFilePath:", line: "tlsTrustCertsFilePath: {{ tgt_tls_dest_homedir }}/rootca/{{ public_cacert_name }}" }
  when: enable_fwrkr_tls is defined and enable_fwrkr_tls|bool