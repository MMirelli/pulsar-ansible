---
# Start Zookeeper servers
- hosts: zookeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_component: 'zookeeper'
    srv_ports: ["{{ zk_clnt_port }}"]
  roles: 
    # Check the current status of zookeepers
    - { role: misc/_check_svc_status }
    # Start zookepers
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ zk_jvm_options }}" }

# Start Bookkeeper nodes, one by one
- hosts: bookkeeper
  any_errors_fatal: false
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_component: 'bookie'
    srv_ports: ["{{ bookie_listening_port }}"]
  roles: 
    # Check the current status of bookies
    - { role: misc/_check_svc_status }
    # Start bookies
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ bookie_jvm_options }}" }

# - Sanity test of whether bookies are up and running properly
- hosts: bookkeeper
  run_once: true
  roles:
    - { role: pulsar/bookkeeper/bkie_sanityCheck }

# Start Pulsar broker nodes, one by one
- hosts: broker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  serial: 1
  vars:
    srvStarted: true
    srv_component: 'broker'
    srv_ports: [
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ web_svc_port_tls }}{% else %}{{ web_svc_port }}{% endif %}",
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ broker_svc_port_tls }}{% else %}{{ broker_svc_port }}{% endif %}"
      ] 
  roles: 
    # Check the current status of brokers
    - { role: misc/_check_svc_status }
    # Start brokers
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ broker_jvm_options }}" }

# - Update Pulsar server log file ownership and mode
#   NOTE: this is needed to avoid pulsar CLI command output errors
- hosts: pulsarServer:!functions_worker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  roles:
    - { role: pulsar/common/pulsar_fixLogPermission }