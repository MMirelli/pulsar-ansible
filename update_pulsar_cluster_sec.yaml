---
- hosts: all
  gather_facts: true
  any_errors_fatal: true
  become: true
  become_method: sudo
  roles: 
    - { role: pulsar_common_brokerlist, run_once: true }

- hosts: cluster_srv
  any_errors_fatal: true
  become: true
  become_method: sudo
  tasks:
  - name: Create security (sub)folders on Pulsar servers
    file:
      path: "{{ pulsar_security_file_homedir }}/{{ item }}"
      state: directory
      recurse: yes
      owner: "{{ pulsar_user }}"
      group: "{{ pulsar_user }}"
    with_items:
      - jwt/key
      - jwt/token
      - tls/server
      - tls/rootca
    when: srv_type|regex_search('broker')

- hosts: cluster_clnt
  any_errors_fatal: true
  become: true
  become_method: sudo
  tasks:
  - name: Create security (sub)folders on Pulsar clients
    file:
      path: "{{ pulsar_security_file_homedir }}/{{ item }}"
      state: directory
      recurse: yes
      owner: "{{ pulsar_user }}"
      group: "{{ pulsar_user }}"
    with_items:
      - jwt/token
      - tls/rootca

- hosts: cluster_srv
  any_errors_fatal: true
  become: true
  become_method: sudo
  tasks:
  - name: Enable Pulsar AuthN and AuthR
    lineinfile:
      path: "{{ pbroker_conf_file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      #### AuthN and AuthR
      - { regexp: '^authenticationEnabled=', line: "authenticationEnabled=true" }
      - { regexp: '^authenticationProviders=', line: "authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderToken" }
      - { regexp: '^authorizationEnabled=', line: "authorizationEnabled=true" }
      - { regexp: '^superUserRoles=', line: "superUserRoles={{ super_user_role_names }}" }
      - { regexp: '^tokenPublicKey=', line: "tokenPublicKey=file://{{ pulsar_security_file_homedir }}/jwt/key/{{ token_asym_public_key_name }}" }
      - { regexp: '^brokerClientAuthenticationPlugin=', line: "brokerClientAuthenticationPlugin=org.apache.pulsar.client.impl.auth.AuthenticationToken" }
      - { regexp: '^brokerClientAuthenticationParameters=', line: "brokerClientAuthenticationParameters=file://{{ pulsar_security_file_homedir }}/jwt/token/{{ super_user_role_names }}.jwt" }
    when: srv_type|regex_search('broker') and pulsar_auth_enabled|bool

- hosts: cluster_srv
  any_errors_fatal: true
  become: true
  become_method: sudo
  tasks:
  - name: Enable Pulsar TLS encryption
    lineinfile:
      path: "{{ pbroker_conf_file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      #### TLS
      - { regexp: '^brokerServicePortTls=', line: 'brokerServicePortTls={{ broker_svc_port_tls }}' }
      - { regexp: '^webServicePortTls=', line: 'webServicePortTls={{ web_svc_port_tls }}' }
      - { regexp: '^tlsKeyFilePath=', line: "tlsKeyFilePath={{ pulsar_security_file_homedir }}/tls/server/{{ broker_tls_key_name }}" }
      - { regexp: '^tlsCertificateFilePath=', line: "tlsCertificateFilePath={{ pulsar_security_file_homedir }}/tls/server/{{ broker_tls_cert_name }}" }
      - { regexp: '^tlsTrustCertsFilePath=', line: "tlsTrustCertsFilePath={{ pulsar_security_file_homedir }}/tls/rootca/{{ broker_tls_trust_cert_name }}" }
      # - { regexp: '^tlsProtocols=', line: "tlsProtocols=TLSv1.3,TLSv1.2" }
      # - { regexp: '^tlsCiphers=', line: "tlsCiphers=" }
      - { regexp: '^brokerClientTlsEnabled=', line: "brokerClientTlsEnabled=true" }
      - { regexp: '^brokerClientTrustCertsFilePath=', line: "brokerClientTrustCertsFilePath={{ pulsar_security_file_homedir }}/tls/rootca/{{ broker_tls_trust_cert_name }}" }
    when: srv_type|regex_search('broker') and pulsar_tls_enabled|bool

- hosts: cluster_clnt
  any_errors_fatal: true
  become: true
  become_method: sudo
  vars:
    local_folder: ./bash
  tasks:
  - name: Update client.conf with Pulsar AuthN and AuthR enabled
    lineinfile:
      path: "{{ pulsar_client_config_file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: '^authPlugin=', line: "authPlugin=org.apache.pulsar.client.impl.auth.AuthenticationToken" }
      - { regexp: '^authParams=', line: "authParams=file://{{ pulsar_security_file_homedir }}/jwt/token/{{ super_user_role_names }}.jwt" }
    when:
      pulsar_auth_enabled|bool

- hosts: cluster_clnt
  any_errors_fatal: true
  become: true
  become_method: sudo
  vars:
    local_folder: ./bash
  tasks:
  - name: Update client.conf with Pulsar TLS encryption enabled
    lineinfile:
      path: "{{ pulsar_client_config_file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: '^webServiceUrl=', line: "webServiceUrl=https://{{ web_service_url_tls_str }}" }
      - { regexp: '^brokerServiceUrl=', line: "brokerServiceUrl=pulsar+ssl://{{ broker_service_url_tls_str }}" }
      - { regexp: '^tlsTrustCertsFilePath=', line: "tlsTrustCertsFilePath={{ pulsar_security_file_homedir }}/tls/rootca/{{ broker_tls_trust_cert_name }}" }
    when:
      pulsar_tls_enabled|bool