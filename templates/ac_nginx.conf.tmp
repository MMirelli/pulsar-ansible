worker_processes  3;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
events {
  worker_connections  10240;
}

http {
  proxy_temp_path /tmp/proxy_temp;
  client_body_temp_path /tmp/client_temp;
  fastcgi_temp_path /tmp/fastcgi_temp;
  uwsgi_temp_path /tmp/uwsgi_temp;
  scgi_temp_path /tmp/scgi_temp;

  log_format  main
    'remote_addr:$remote_addr\t'
    'time_local:$time_local\t'
    'method:$request_method\t'
    'uri:$uri\t'
    'host:$host\t'
    'status:$status\t'
    'bytes_sent:$body_bytes_sent\t'
    'referer:$http_referer\t'
    'useragent:$http_user_agent\t'
    'forwardedfor:$http_x_forwarded_for\t'
    'request_time:$request_time';
  
  access_log /var/log/nginx/access.log main;

  upstream backend {
    server localhost:<<ac_listen_port>>;
  }

  # Only required if running with HTTP
  upstream http-pulsar-proxy {
<<pulsar_broker_webport_list>>
  }

  # Only required if running with HTTPS
  upstream https-pulsar-proxy {
<<pulsar_broker_webport_tls_list>>
  }

  ##################
  ## !->
  # # Only required if running Pulsar Burnell
  # # Burnell is meant to run collocated with the Pulsar Proxy and the Pulsar Websocket Proxy
  # # https://github.com/datastax/burnell
  # upstream pulsar-burnell {
  #   server <<pulsar_burnell_dns_port>>;
  # }
  # 
  # # Only required if running websocket on Pulsar Proxy
  # # Should target either the ws or the wss port depending on the upstream scheme
  # upstream ws-pulsar-proxy {
  #   server <<Pulsar Websocket Proxy DNS Entry and Port>>
  # }
  # 
  # ## Only required if using Open ID Connect for authenticating the Pulsar Admin Console
  # upstream identity-provider {
  #   server <<openid_server_dns_port>>;
  # }
  ## <-!

  # For all location blocks, use the correct scheme for upstream targets
  server {
    location /ruok {
      access_log off;
      return 200 "I'm good\n";
    }

    # Routes traffic to the Pulsar Admin Console server
    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass_header Set-Cookie;
      proxy_pass http://backend;
    }

    ##################
    ## !->
    # # Routes traffic to the websocket proxy
    # location /ws/ {
    #   # Use https or http depending on configuration
    #   proxy_pass https://ws-pulsar-proxy;
    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection "Upgrade";
    #   proxy_set_header Host $host;
    # }
    ## <-!

    # General cluster forwarding rule for functions
    # Use the correct scheme in the proxy_pass
    location ^~ /api/v1/<<home_cluster>>/functions {
      proxy_set_header Accepts application/json;
      rewrite ^/api/v1/<<home_cluster>>/functions/(.*)$ /admin/v3/functions/$1 break;
      proxy_pass http://http-pulsar-proxy$uri$is_args$args;
    }

    # Cluster forwarding rule for sinks
    # Use the correct scheme in the proxy_pass
    location ^~ /api/v1/<<home_cluster>>/sinks {
      rewrite ^/api/v1/<<home_cluster>>/sinks/(.*)$ /admin/v3/sinks/$1 break;
      proxy_pass http://http-pulsar-proxy$uri$is_args$args;
    }

    # Cluster forwarding rule for sources
    # Use the correct scheme in the proxy_pass
    location ^~ /api/v1/<<home_cluster>>/sources {
      rewrite ^/api/v1/<<home_cluster>>/sources/(.*)$ /admin/v3/sources/$1 break;
      proxy_pass http://http-pulsar-proxy$uri$is_args$args;
    }

    ##################
    ## !->
    # Cluster forwarding rule for Burnell
    # Use the correct scheme in the proxy_pass
    # location ^~ /api/v2/<<home_cluster>>/br/ {
    #   rewrite ^/api/v2/<<home_cluster>>/br/(.*)$ /$1 break;
    #   proxy_pass https://pulsar-burnell$uri$is_args$args;
    # }
    # 
    # # Forwarding rule api v2 (Burnell)
    # # Use the correct scheme in the proxy_pass
    # location ^~ /api/v2/<<home_cluster>> {
    #   rewrite ^/api/v2/<<home_cluster>>/(.*)$ /admin/v2/$1 break;
    #   proxy_pass http://pulsar-burnell$uri$is_args$args;
    # }
    # <--!

    # Forwarding rule api v1
    # Use the correct scheme in the proxy_pass
    location ^~ /api/v1/<<home_cluster>> {
      rewrite ^/api/v1/<<home_cluster>>/(.*)$ /admin/v2/$1 break;
      proxy_pass http://http-pulsar-proxy$uri$is_args$args;
    }

    ##################
    ## !->
    # # For use when keycloak is the authentication/identity provider
    # # Use the correct scheme in the proxy_pass
    # # For Okta, use /token for <<Identity Provider Token Endpoint>>. https://developer.okta.com/docs/reference/api/oidc/#token
    # location ^~ /api/v1/auth/token {
    #   rewrite  ^.*$ <<openid_server_dns_port>> break;
    #   proxy_pass http://$uri$is_args$args;
    # }
    # <--!

    listen <<ng_listen_port>> default_server;

    ##################
    ## !->
    # When using SSL/TLS, add the below block.
    # listen <<listen_port_tls>> ssl;
    # ssl_certificate <</path/to/tls.crt>>;
    # ssl_certificate_key <</path/to/tls.key>>;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # <--!  
  }
  
  server {
    location = /nginx_status {
      stub_status;

      access_log off;
      allow 127.0.0.1;
      deny all;
    }

    listen <<ng_status_port>> ;
  }
}