---
##
##  NOTE: DO not change the sequence of the tasks!
##

- hosts: pulsarServer
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  roles: 
    # Enable "srv_select_criteria" variable for server selection
    - { role: pulsar/common/pulsar_setGlobalVars }


# Stop dedicated functions worker nodes, if relevant 
- hosts: functions_worker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_ports: [
      "{% if enable_fwrkr_tls|bool %}{{ funcs_worker_port_tls }}{% else %}{{ funcs_worker_port }}{% endif %}"
    ]
  roles:
    # Check the current status of function workers
    - { role: misc/_check_svc_status, 
        when: srv_select_criteria and (deploy_functions_worker == 'dedicated') }
    # Stop function workers
    - { role: pulsar/common/pulsar_stopSvc, 
        when: srv_select_criteria and (deploy_functions_worker == 'dedicated') }

# Stop dedicated autorecovery nodes, if relevant 
- hosts: autorecovery
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_ports: ["{{ autorecovery_stats_port }}"]
  roles:
    # Check the current status of function workers
    - { role: misc/_check_svc_status, 
        when: srv_select_criteria and (autorecovery_option == 'dedicated') }
    # Stop function workers
    - { role: pulsar/common/pulsar_stopSvc, 
        when: srv_select_criteria and (autorecovery_option == 'dedicated') }

# Stop brokers 
- hosts: broker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_ports: [
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ web_svc_port_tls }}{% else %}{{ web_svc_port }}{% endif %}",
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ broker_svc_port_tls }}{% else %}{{ broker_svc_port }}{% endif %}"
      ]
  roles:
    # Check the current status of brokers
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Stop brokers
    - { role: pulsar/common/pulsar_stopSvc, when: srv_select_criteria }

# Stop bookies 
- hosts: bookkeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  # serial: 1
  vars:
    srvStarted: true
    srv_ports: ["{{ bookie_listening_port }}"]
  roles:
    # Check the current status of bookies
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Stop bookies
    - { role: pulsar/common/pulsar_stopSvc, when: srv_select_criteria }
  post_tasks:
    - name: If requested, clean-up bookkeeper data directories
      shell: rm -rf {{ item }}
      # args:
      #   warn: no
      with_items:
        - "{{ tgt_pulsar_bookie_journal_data_homedirs }}"
        - "{{ tgt_pulsar_bookie_ledger_data_homedirs }}"
      when: srv_select_criteria and (purge_pulsar is defined and purge_pulsar|bool)

# Stop zookeepers 
- hosts: zookeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  # serial: 1
  vars:
    srvStarted: true
    srv_ports: ["{{ zk_clnt_port }}"]
  roles:
    # Check the current status of zookeepers
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Stop zookeepers
    - { role: pulsar/common/pulsar_stopSvc, when: srv_select_criteria }
  post_tasks:
    - name: If requested, clean-up zookeeper data directories
      shell: rm -rf {{ item }}
      # args:
      #   warn: no
      with_items:
        - "{{ tgt_pulsar_zk_data_homedir }}"
      when: srv_select_criteria and (purge_pulsar is defined and purge_pulsar|bool)

# Clean up pulsar binaries and logs
- hosts: pulsarServer
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  tasks:
  - name: If requested, clean-up pulsar binaries and logs
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ tgt_pulsar_inst_dir }}"
      - "{{ tgt_pulsar_gc_log_homedir }}"
      - "{{ tgt_pulsar_log_homedir }}"
      # - "{{ tgt_pkg_dir }}"
    when: srv_select_criteria and (purge_pulsar is defined and purge_pulsar|bool)