---
##
##  NOTE: DO not change the sequence of the tasks!
##

#########################
# Install Java and Pulsar binaries
# -----------------------
- hosts: LSCluster
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  roles: 
    - { role: misc/_inst_openjdk }

- hosts: pulsarClient
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  roles: 
    # Prepare for Pulsar binary installation, including
    # - create Pulsar user and group
    # - prepare binary folder structure
    # - etc.
    - { role: pulsar/common/pulsar_prepBinary }
    # Get Pulsar binary tarball file of the target version to the server host machine
    - { role: pulsar/common/pulsar_getBinary }
    # Install Pulsar binary
    # - "keep_newer_files: yes" means not to overwrite existing Pulsar files
    - { role: pulsar/common/pulsar_instBinary, keep_newer_files: yes }

- hosts: broker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  tasks:
    - name: Copy the nar file needed for broker side message filtering
      include_role:
        name: pulsar/broker/_deploy_msg_filter_package
      when: enable_srvside_msg_filtering|bool


#########################
# PreWork
# -----------------------
# - When bookie rack-awareness is needed, check the validity of 
#   the rack-awareness related configuration settings
- hosts: pulsarServer
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  run_once: true
  roles: 
    - { role: pulsar/common/pulsar_bkieRackMinNumCheck }

# - Get zookeeper list in deseried formats and save them in variables
#   They are needed in later steps for Pulsar configurations
- hosts: zookeeper
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  run_once: true
  roles: 
    - { role: pulsar/zookeeper/_pre_zkArrListVar }

# - Get broker list in deseried formats and save them in variables
#   They are needed in later steps for Pulsar configurations
- hosts: broker
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  run_once: true
  roles: 
    - { role: pulsar/broker/_pre_brokerListVar }

# - Update Pulsar component log flush behavior
- hosts: pulsarClient
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  tasks:
  - name: Update Pulsar log flush behavior 
    lineinfile:
      dest: "{{ tgt_pulsar_inst_dir }}/conf/log4j2.yaml"
      state: present
      regexp: "^\\s*immediateFlush:"
      line: "      immediateFlush: true"
    when: immediate_flush is defined and immediate_flush|bool


#########################
# Zookeeper Related
# -----------------------
# - Configure and start zookeepers
- hosts: zookeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_component: 'zookeeper'
    srv_ports: ["{{ zk_clnt_port }}"]
  roles: 
    # If needed, mount dedicated storage space to zookeepers
    - { role: pulsar/zookeeper/zkpr_mntStorage, when: not skip_zk_block_device_setup|bool }
    # Config zookeeper (zookeeper.conf)
    - { role: pulsar/common/pulsar_srvBreadCrumb, pulsar_vm_type: "{{ srv_component }}" }
    - { role: pulsar/zookeeper/zkpr_config }
    # Check the current status of zookeepers
    - { role: misc/_check_svc_status }
    # Start zookepers
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ zk_jvm_options }}" }

# - Initialzie Pulsar cluster metadata after zookeepers are up and running
- hosts: zookeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  run_once: true
  roles: 
    - { role: pulsar/zookeeper/zkpr_initMetadata, srv_options: "{{ zk_jvm_options }}" }


#########################
# Bookkeeper Related
# -----------------------
# - Configure and start bookkeepers
- hosts: bookkeeper
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_component: 'bookie'
    srv_ports: ["{{ bookie_listening_port }}"]
  roles: 
    # If needed, mount dedicated storage space to bookkeepers
    - { role: pulsar/bookie/bkie_mntStorage, when: not skip_bookie_block_device_setup|bool }
    # Config bookkeeper (bookkeeper.conf)
    - { role: pulsar/common/pulsar_srvBreadCrumb, pulsar_vm_type: "{{ srv_component }}" }
    - { role: pulsar/bookie/bkie_config }
    # Check the current status of bookies
    - { role: misc/_check_svc_status }
    # Start bookies
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ bookie_jvm_options }}" }

# - Sanity test of whether bookies are up and running properly
- hosts: bookkeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  run_once: true
  roles:
    - { role: pulsar/bookie/bkie_sanityCheck, srv_options: "{{ bookie_jvm_options_b }}" }


#########################
# Broker Related
# -----------------------
# - Configure brokers
- hosts: broker
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    hostNameStr2: "{{ private_ip | replace('.', '-') }}"
    srvStarted: true
    srv_component: 'broker'
    srv_key_name: "{{ srv_component }}.{{ hostNameStr2 }}.key-pk8.pem"
    srv_cert_name: "{{ srv_component }}.{{ hostNameStr2 }}.crt.pem"
    srv_ports: [
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ web_svc_port_tls }}{% else %}{{ web_svc_port }}{% endif %}",
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ broker_svc_port_tls }}{% else %}{{ broker_svc_port }}{% endif %}"
      ]
  roles: 
    # Config broker (broker.conf)
    - { role: pulsar/common/pulsar_srvBreadCrumb, pulsar_vm_type: "{{ srv_component }}" }
    - { role: pulsar/broker/brkr_config }
    # Check the current status of brokers
    - { role: misc/_check_svc_status }
    # Start brokers
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ broker_jvm_options }}" }

# - Initialzie transaction coordinator metadata when needed
- hosts: broker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  run_once: true
  roles: 
    - { role: pulsar/broker/brkr_initTransMeta, srv_options: "{{ broker_jvm_options }}" }
 

#########################
# Configure Pular clients
# -----------------------
# - 
- hosts: pulsarClient
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  roles:
    # Config Pulsar client (client.conf)
    - { role: pulsar/client/clnt_config }


#########################
# Post work
# -----------------------  
# - Update .profile for all hosts in cluster
- hosts: pulsarClient
  any_errors_fatal: true
  tasks:
  - name: Add Pulsar executables in $PATH system variable
    lineinfile:
      dest: ~/.profile
      state: present
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: "^PULSAR_HOME=", line: "PULSAR_HOME={{ tgt_pulsar_inst_dir }}" }
      # No match add the line at EOF
      - { regexp: "NO-MATCH", line: "PATH=\"$PULSAR_HOME/bin:$PATH\"" }